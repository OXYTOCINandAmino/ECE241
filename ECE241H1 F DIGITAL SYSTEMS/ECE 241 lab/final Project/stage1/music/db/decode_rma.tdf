--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=22 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 18.0 cbx_cycloneii 2018:04:24:18:04:18:SJ cbx_lpm_add_sub 2018:04:24:18:04:18:SJ cbx_lpm_compare 2018:04:24:18:04:18:SJ cbx_lpm_decode 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ cbx_nadder 2018:04:24:18:04:18:SJ cbx_stratix 2018:04:24:18:04:18:SJ cbx_stratixii 2018:04:24:18:04:18:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_rma
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[21..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[21..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode1006w[3..0]	: WIRE;
	w_anode1017w[3..0]	: WIRE;
	w_anode1027w[3..0]	: WIRE;
	w_anode1037w[3..0]	: WIRE;
	w_anode1047w[3..0]	: WIRE;
	w_anode1057w[3..0]	: WIRE;
	w_anode1067w[3..0]	: WIRE;
	w_anode1077w[3..0]	: WIRE;
	w_anode1088w[2..0]	: WIRE;
	w_anode1097w[3..0]	: WIRE;
	w_anode1108w[3..0]	: WIRE;
	w_anode1118w[3..0]	: WIRE;
	w_anode1128w[3..0]	: WIRE;
	w_anode1138w[3..0]	: WIRE;
	w_anode1148w[3..0]	: WIRE;
	w_anode1158w[3..0]	: WIRE;
	w_anode1168w[3..0]	: WIRE;
	w_anode1179w[2..0]	: WIRE;
	w_anode1188w[3..0]	: WIRE;
	w_anode1199w[3..0]	: WIRE;
	w_anode1209w[3..0]	: WIRE;
	w_anode1219w[3..0]	: WIRE;
	w_anode1229w[3..0]	: WIRE;
	w_anode1239w[3..0]	: WIRE;
	w_anode1249w[3..0]	: WIRE;
	w_anode1259w[3..0]	: WIRE;
	w_anode895w[2..0]	: WIRE;
	w_anode908w[3..0]	: WIRE;
	w_anode925w[3..0]	: WIRE;
	w_anode935w[3..0]	: WIRE;
	w_anode945w[3..0]	: WIRE;
	w_anode955w[3..0]	: WIRE;
	w_anode965w[3..0]	: WIRE;
	w_anode975w[3..0]	: WIRE;
	w_anode985w[3..0]	: WIRE;
	w_anode997w[2..0]	: WIRE;
	w_data893w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[21..0] = eq_wire[21..0];
	eq_wire[] = ( ( w_anode1259w[3..3], w_anode1249w[3..3], w_anode1239w[3..3], w_anode1229w[3..3], w_anode1219w[3..3], w_anode1209w[3..3], w_anode1199w[3..3], w_anode1188w[3..3]), ( w_anode1168w[3..3], w_anode1158w[3..3], w_anode1148w[3..3], w_anode1138w[3..3], w_anode1128w[3..3], w_anode1118w[3..3], w_anode1108w[3..3], w_anode1097w[3..3]), ( w_anode1077w[3..3], w_anode1067w[3..3], w_anode1057w[3..3], w_anode1047w[3..3], w_anode1037w[3..3], w_anode1027w[3..3], w_anode1017w[3..3], w_anode1006w[3..3]), ( w_anode985w[3..3], w_anode975w[3..3], w_anode965w[3..3], w_anode955w[3..3], w_anode945w[3..3], w_anode935w[3..3], w_anode925w[3..3], w_anode908w[3..3]));
	w_anode1006w[] = ( (w_anode1006w[2..2] & (! w_data893w[2..2])), (w_anode1006w[1..1] & (! w_data893w[1..1])), (w_anode1006w[0..0] & (! w_data893w[0..0])), w_anode997w[2..2]);
	w_anode1017w[] = ( (w_anode1017w[2..2] & (! w_data893w[2..2])), (w_anode1017w[1..1] & (! w_data893w[1..1])), (w_anode1017w[0..0] & w_data893w[0..0]), w_anode997w[2..2]);
	w_anode1027w[] = ( (w_anode1027w[2..2] & (! w_data893w[2..2])), (w_anode1027w[1..1] & w_data893w[1..1]), (w_anode1027w[0..0] & (! w_data893w[0..0])), w_anode997w[2..2]);
	w_anode1037w[] = ( (w_anode1037w[2..2] & (! w_data893w[2..2])), (w_anode1037w[1..1] & w_data893w[1..1]), (w_anode1037w[0..0] & w_data893w[0..0]), w_anode997w[2..2]);
	w_anode1047w[] = ( (w_anode1047w[2..2] & w_data893w[2..2]), (w_anode1047w[1..1] & (! w_data893w[1..1])), (w_anode1047w[0..0] & (! w_data893w[0..0])), w_anode997w[2..2]);
	w_anode1057w[] = ( (w_anode1057w[2..2] & w_data893w[2..2]), (w_anode1057w[1..1] & (! w_data893w[1..1])), (w_anode1057w[0..0] & w_data893w[0..0]), w_anode997w[2..2]);
	w_anode1067w[] = ( (w_anode1067w[2..2] & w_data893w[2..2]), (w_anode1067w[1..1] & w_data893w[1..1]), (w_anode1067w[0..0] & (! w_data893w[0..0])), w_anode997w[2..2]);
	w_anode1077w[] = ( (w_anode1077w[2..2] & w_data893w[2..2]), (w_anode1077w[1..1] & w_data893w[1..1]), (w_anode1077w[0..0] & w_data893w[0..0]), w_anode997w[2..2]);
	w_anode1088w[] = ( (w_anode1088w[1..1] & data_wire[4..4]), (w_anode1088w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode1097w[] = ( (w_anode1097w[2..2] & (! w_data893w[2..2])), (w_anode1097w[1..1] & (! w_data893w[1..1])), (w_anode1097w[0..0] & (! w_data893w[0..0])), w_anode1088w[2..2]);
	w_anode1108w[] = ( (w_anode1108w[2..2] & (! w_data893w[2..2])), (w_anode1108w[1..1] & (! w_data893w[1..1])), (w_anode1108w[0..0] & w_data893w[0..0]), w_anode1088w[2..2]);
	w_anode1118w[] = ( (w_anode1118w[2..2] & (! w_data893w[2..2])), (w_anode1118w[1..1] & w_data893w[1..1]), (w_anode1118w[0..0] & (! w_data893w[0..0])), w_anode1088w[2..2]);
	w_anode1128w[] = ( (w_anode1128w[2..2] & (! w_data893w[2..2])), (w_anode1128w[1..1] & w_data893w[1..1]), (w_anode1128w[0..0] & w_data893w[0..0]), w_anode1088w[2..2]);
	w_anode1138w[] = ( (w_anode1138w[2..2] & w_data893w[2..2]), (w_anode1138w[1..1] & (! w_data893w[1..1])), (w_anode1138w[0..0] & (! w_data893w[0..0])), w_anode1088w[2..2]);
	w_anode1148w[] = ( (w_anode1148w[2..2] & w_data893w[2..2]), (w_anode1148w[1..1] & (! w_data893w[1..1])), (w_anode1148w[0..0] & w_data893w[0..0]), w_anode1088w[2..2]);
	w_anode1158w[] = ( (w_anode1158w[2..2] & w_data893w[2..2]), (w_anode1158w[1..1] & w_data893w[1..1]), (w_anode1158w[0..0] & (! w_data893w[0..0])), w_anode1088w[2..2]);
	w_anode1168w[] = ( (w_anode1168w[2..2] & w_data893w[2..2]), (w_anode1168w[1..1] & w_data893w[1..1]), (w_anode1168w[0..0] & w_data893w[0..0]), w_anode1088w[2..2]);
	w_anode1179w[] = ( (w_anode1179w[1..1] & data_wire[4..4]), (w_anode1179w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1188w[] = ( (w_anode1188w[2..2] & (! w_data893w[2..2])), (w_anode1188w[1..1] & (! w_data893w[1..1])), (w_anode1188w[0..0] & (! w_data893w[0..0])), w_anode1179w[2..2]);
	w_anode1199w[] = ( (w_anode1199w[2..2] & (! w_data893w[2..2])), (w_anode1199w[1..1] & (! w_data893w[1..1])), (w_anode1199w[0..0] & w_data893w[0..0]), w_anode1179w[2..2]);
	w_anode1209w[] = ( (w_anode1209w[2..2] & (! w_data893w[2..2])), (w_anode1209w[1..1] & w_data893w[1..1]), (w_anode1209w[0..0] & (! w_data893w[0..0])), w_anode1179w[2..2]);
	w_anode1219w[] = ( (w_anode1219w[2..2] & (! w_data893w[2..2])), (w_anode1219w[1..1] & w_data893w[1..1]), (w_anode1219w[0..0] & w_data893w[0..0]), w_anode1179w[2..2]);
	w_anode1229w[] = ( (w_anode1229w[2..2] & w_data893w[2..2]), (w_anode1229w[1..1] & (! w_data893w[1..1])), (w_anode1229w[0..0] & (! w_data893w[0..0])), w_anode1179w[2..2]);
	w_anode1239w[] = ( (w_anode1239w[2..2] & w_data893w[2..2]), (w_anode1239w[1..1] & (! w_data893w[1..1])), (w_anode1239w[0..0] & w_data893w[0..0]), w_anode1179w[2..2]);
	w_anode1249w[] = ( (w_anode1249w[2..2] & w_data893w[2..2]), (w_anode1249w[1..1] & w_data893w[1..1]), (w_anode1249w[0..0] & (! w_data893w[0..0])), w_anode1179w[2..2]);
	w_anode1259w[] = ( (w_anode1259w[2..2] & w_data893w[2..2]), (w_anode1259w[1..1] & w_data893w[1..1]), (w_anode1259w[0..0] & w_data893w[0..0]), w_anode1179w[2..2]);
	w_anode895w[] = ( (w_anode895w[1..1] & (! data_wire[4..4])), (w_anode895w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode908w[] = ( (w_anode908w[2..2] & (! w_data893w[2..2])), (w_anode908w[1..1] & (! w_data893w[1..1])), (w_anode908w[0..0] & (! w_data893w[0..0])), w_anode895w[2..2]);
	w_anode925w[] = ( (w_anode925w[2..2] & (! w_data893w[2..2])), (w_anode925w[1..1] & (! w_data893w[1..1])), (w_anode925w[0..0] & w_data893w[0..0]), w_anode895w[2..2]);
	w_anode935w[] = ( (w_anode935w[2..2] & (! w_data893w[2..2])), (w_anode935w[1..1] & w_data893w[1..1]), (w_anode935w[0..0] & (! w_data893w[0..0])), w_anode895w[2..2]);
	w_anode945w[] = ( (w_anode945w[2..2] & (! w_data893w[2..2])), (w_anode945w[1..1] & w_data893w[1..1]), (w_anode945w[0..0] & w_data893w[0..0]), w_anode895w[2..2]);
	w_anode955w[] = ( (w_anode955w[2..2] & w_data893w[2..2]), (w_anode955w[1..1] & (! w_data893w[1..1])), (w_anode955w[0..0] & (! w_data893w[0..0])), w_anode895w[2..2]);
	w_anode965w[] = ( (w_anode965w[2..2] & w_data893w[2..2]), (w_anode965w[1..1] & (! w_data893w[1..1])), (w_anode965w[0..0] & w_data893w[0..0]), w_anode895w[2..2]);
	w_anode975w[] = ( (w_anode975w[2..2] & w_data893w[2..2]), (w_anode975w[1..1] & w_data893w[1..1]), (w_anode975w[0..0] & (! w_data893w[0..0])), w_anode895w[2..2]);
	w_anode985w[] = ( (w_anode985w[2..2] & w_data893w[2..2]), (w_anode985w[1..1] & w_data893w[1..1]), (w_anode985w[0..0] & w_data893w[0..0]), w_anode895w[2..2]);
	w_anode997w[] = ( (w_anode997w[1..1] & (! data_wire[4..4])), (w_anode997w[0..0] & data_wire[3..3]), enable_wire);
	w_data893w[2..0] = data_wire[2..0];
END;
--VALID FILE
